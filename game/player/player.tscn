[gd_scene load_steps=4 format=3 uid="uid://c813lymkbjvd"]

[ext_resource type="PackedScene" uid="uid://bminmqpgueom7" path="res://game/player/little_cartoon_dog.glb" id="2_a4w0n"]

[sub_resource type="GDScript" id="GDScript_b2mth"]
script/source = "extends CharacterBody3D

@onready var _camera := %Camera3D as Camera3D
@onready var _camera_pivot := %CameraPivot as Node3D

@export_range(0.0, 1.0) var mouse_sensitivity = 0.01
@export var tilt_limit = deg_to_rad(75)
# How fast the player moves in meters per second.
@export var speed = 14
# The downward acceleration when in the air, in meters per second squared.
@export var fall_acceleration = 75


func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		_camera_pivot.rotation.x -= event.relative.y * mouse_sensitivity
		# Prevent the camera from rotating too far up or down.
		_camera_pivot.rotation.x = clampf(_camera_pivot.rotation.x, -tilt_limit, tilt_limit)
		_camera_pivot.rotation.y += -event.relative.x * mouse_sensitivity

var target_velocity = Vector3.ZERO


func _physics_process(delta):
	var direction = Vector3.ZERO

	if Input.is_action_pressed(\"move_right\"):
		direction.x += 1
	if Input.is_action_pressed(\"move_left\"):
		direction.x -= 1
	if Input.is_action_pressed(\"move_back\"):
		direction.z += 1
	if Input.is_action_pressed(\"move_forward\"):
		direction.z -= 1
		
	if direction != Vector3.ZERO:
		direction = direction.normalized()
		$Pivot.basis = Basis.looking_at(direction)

	# Ground Velocity
	target_velocity.x = direction.x * speed
	target_velocity.z = direction.z * speed

	# Vertical Velocity
	if not is_on_floor(): # If in the air, fall towards the floor. Literally gravity
		target_velocity.y = target_velocity.y - (fall_acceleration * delta)

	# Moving the Character
	velocity = target_velocity
	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_a4w0n"]

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_b2mth")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)
shape = SubResource("CapsuleShape3D_a4w0n")

[node name="Pivot" type="Node3D" parent="."]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 1.13139, 0)

[node name="Character" parent="Pivot" instance=ExtResource("2_a4w0n")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)

[node name="CameraPivot" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.750111, 0.661312, 0, -0.661312, 0.750111, 0, 7, 5)

[node name="SpringArm3D" type="SpringArm3D" parent="CameraPivot"]
spring_length = 3.0

[node name="Camera3D" type="Camera3D" parent="CameraPivot"]
